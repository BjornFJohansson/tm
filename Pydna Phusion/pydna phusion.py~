# ---
# jupyter:
#   jupytext:
#     text_representation:
#       extension: .py
#       format_name: light
#       format_version: '1.5'
#       jupytext_version: 1.11.1
#   kernelspec:
#     display_name: Python [conda env:bjorn39]
#     language: python
#     name: conda-env-bjorn39-py
# ---

# ## Jupyter notebook
#
# comment

from pydna.amplify import Anneal
from pydna.amplify import pcr
from pydna.assembly import Assembly
from pydna.genbank import genbank
from pydna.genbank import Genbank
from pydna.download import download_text
from pydna.dseqrecord import Dseqrecord
from pydna.dseq import Dseq
from pydna.readers import read
from pydna.readers import read_primer
from pydna.parsers import parse
from pydna.parsers import parse_primers
from pydna.editor import ape
from pydna.design import primer_design
from pydna.design import assembly_fragments
from pydna.design import circular_assembly_fragments
from pydna.utils import eq
from pydna.genbankfixer import gbtext_clean
from pydna.myprimers import PrimerList

# ### joblib
#
# Joblib is a set of tools to provide lightweight pipelining in Python. In particular:
#
# - transparent disk-caching of functions and lazy re-evaluation (memoize pattern)
# - easy simple parallel computing
#
# Joblib is optimized to be fast and robust on large data in particular and has specific optimizations for numpy arrays. It is BSD-licensed.
#
# - [readthedocs](https://joblib.readthedocs.io/en/latest)
# - [github](https://github.com/joblib/joblib)
# - [pypi](https://pypi.org/project/joblib)

from joblib import Memory
memory = Memory(location='./joblib_memory_cachedir', verbose=0)

from time import sleep
from tqdm.notebook import tqdm
from tqdm.notebook import trange


# +
# NBVAL_IGNORE_OUTPUT
@memory.cache
def slow_function(x):
    for i in trange(3, desc='1st loop'):
        for j in tqdm(range(100), desc='2nd loop'):
            sleep(0.01)
    return x+x

slow_function(5)

# new

breakpoint()


if __name__ == '__main__':
	print("main")
